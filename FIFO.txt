#include <stdio.h>

#define FRAME_COUNT 3 // Define the number of frames

// FIFO Page Replacement Function
void fifoPageReplacement(int pages[], int n) {
    int frames[FRAME_COUNT];
    int index = 0;
    int pageFaults = 0;

    // Initialize frames to -1 (indicating empty)
    for (int i = 0; i < FRAME_COUNT; i++) {
        frames[i] = -1;
    }

    printf("FIFO Pages\tFrames\n");
    for (int i = 0; i < n; i++) {
        int page = pages[i];
        int pageFound = 0;

        // Check if the page is already in a frame
        for (int j = 0; j < FRAME_COUNT; j++) {
            if (frames[j] == page) {
                pageFound = 1;
                break;
            }
        }

        // If page is not found, replace the oldest page
        if (!pageFound) {
            frames[index] = page;
            index = (index + 1) % FRAME_COUNT; // Move to the next frame
            pageFaults++;
        }

        // Print the current page and frame state
        printf("%d\t\t", page);
        for (int j = 0; j < FRAME_COUNT; j++) {
            if (frames[j] != -1) {
                printf("%d ", frames[j]);
            } else {
                printf("- "); // Indicate empty slots
            }
        }
        printf("\n");
    }

    // Calculate and print results
    printf("Total Page Faults: %d\n", pageFaults);
    int hits = n - pageFaults;
    printf("Fault Frequency: %.2f%%\n", (float)pageFaults / n * 100);
    printf("Hit Frequency: %.2f%%\n", (float)hits / n * 100);
}

// Main Function
int main() {
    int n;

    // Input number of pages
    printf("Enter the number of pages: ");
    scanf("%d", &n);

    int pages[n];

    // Input the page reference string
    printf("Enter the page reference string:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &pages[i]);
    }

    // Call FIFO Page Replacement
    fifoPageReplacement(pages, n);

    return 0;
}
